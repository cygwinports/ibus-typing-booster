--- origsrc/ibus-typing-booster-1.5.24/engine/m17n_translit.py	2017-03-06 06:37:26.000000000 -0600
+++ src/ibus-typing-booster-1.5.24/engine/m17n_translit.py	2017-03-06 14:27:31.290752200 -0600
@@ -88,11 +88,13 @@ def _init():
     '''Open libm17n and fill global variables for functions and
     variables from libm17n
     '''
+    global libm17n__core_lib
+    libm17n__core_lib = ctypes.CDLL('cygm17n-core-0.dll', mode = ctypes.RTLD_GLOBAL)
     global libm17n__lib
-    libm17n__lib = ctypes.CDLL('libm17n.so.0', mode = ctypes.RTLD_GLOBAL)
+    libm17n__lib = ctypes.CDLL('cygm17n-0.dll', mode = ctypes.RTLD_GLOBAL)
     libm17n__lib.m17n_init()
     global libm17n__mplist
-    libm17n__mplist = libm17n__lib.mplist
+    libm17n__mplist = libm17n__core_lib.mplist
     libm17n__mplist.argtypes = []
     libm17n__mplist.restype = ctypes.POINTER(libm17n__MPlist)
     global libm17n__mconv_buffer_converter
@@ -117,7 +119,7 @@ def _init():
         ctypes.POINTER(libm17n__MConverter), ctypes.POINTER(libm17n__MText)]
     libm17n__mconv_encode.restype = ctypes.c_int
     global libm17n__msymbol
-    libm17n__msymbol = libm17n__lib.msymbol
+    libm17n__msymbol = libm17n__core_lib.msymbol
     libm17n__msymbol.argtypes = [ctypes.c_char_p]
     libm17n__msymbol.restype = libm17n__MSymbol
     global libm17n__minput_open_im
@@ -150,16 +152,16 @@ def _init():
         ctypes.POINTER(libm17n__MText)]
     libm17n__minput_lookup.restype = ctypes.c_int
     global libm17n__mtext
-    libm17n__mtext = libm17n__lib.mtext
+    libm17n__mtext = libm17n__core_lib.mtext
     libm17n__mtext.argtypes = []
     libm17n__mtext.restype = ctypes.POINTER(libm17n__MText)
     global libm17n__mtext_len
-    libm17n__mtext_len = libm17n__lib.mtext_len
+    libm17n__mtext_len = libm17n__core_lib.mtext_len
     libm17n__mtext_len.argtypes = [ctypes.POINTER(libm17n__MText)]
     libm17n__mtext_len.restype = ctypes.c_int
     global libm17n__Mcoding_utf_8
     libm17n__Mcoding_utf_8 = libm17n__MSymbol.in_dll(
-        ctypes.pythonapi, 'Mcoding_utf_8')
+        libm17n__lib, 'Mcoding_utf_8')
     global _utf8_converter
     _utf8_converter = libm17n__mconv_buffer_converter(
         libm17n__Mcoding_utf_8, ctypes.c_char_p(None), ctypes.c_int(0))
